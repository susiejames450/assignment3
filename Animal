import java.util.List;
import java.util.Random;

/**
 * A class representing shared characteristics of animals.
 * 
 * @author David J. Barnes and Michael KÃ¶lling
 * @version 2016.02.29 (2)
 */
public abstract class Animal extends Lifecycle
{
    private String gender;
    
    private static final Random rand = Randomizer.getRandom();
    
    private static final double GENDER_PROBABILITY = 0.5;
    
    private int BREEDING_AGE;
    
    private double BREEDING_PROBABILITY;
    
    private int MAX_LITTER_SIZE;
    /**
     * Create a new animal at location in field.
     * 
     * @param field The field currently occupied.
     * @param location The location within the field.
     */
    public Animal(Field field, Location location)
    {
        super(field, location);
        setGender();
        BREEDING_AGE = 5;
        BREEDING_PROBABILITY = 0.24;
        MAX_LITTER_SIZE = 4;
    }
    
    /**
     * Make this animal act - that is: make it do
     * whatever it wants/needs to do.
     * @param newAnimals A list to receive newly born animals.
     */
    abstract public void act(List<Animal> newAnimals);

    /**
     * 
     */
    protected void setGender()
    {
        if(rand.nextDouble() <= GENDER_PROBABILITY) {
            gender = "female";
        }
        else{
            gender = "male";
        }
    }
    
    /**
     * 
     */
    protected String getGender()
    {
        return gender;
    }
    
    /**
     * 
     */
    private boolean canBreed()
    {
        return age >= BREEDING_AGE;
    }
    
    /**
     * 
     */
    private int breed()
    {
        int births = 0;
        if(canBreed() && rand.nextDouble() <= BREEDING_PROBABILITY) {
            births = rand.nextInt(MAX_LITTER_SIZE) + 1;
        }
        return births;
    }
    

}
